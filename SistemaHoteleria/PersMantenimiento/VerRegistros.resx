<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLogoWaraForm.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAABIpJREFUeF7t
        nT+IXHUQx09RUbGwEdF0VoJNQE2tsYu1NjaKptFGwcJKA0EUIYK9kkKbxMJWkaCVhWghJFiINnYqCIIg
        /js/82ae3OV2dn/v7dvZ5d73A0OS29/MvPf9sLc5bpPbE0IIITbN/v7+Geoj6hr1vaqprlKW2ZmIcRoY
        eJ4S63E+4lwPBp2i/u1GinWwDE9FrONhyIVunJiCCxHreBhyyWeJCbgUsY6HIZd9lpiAyxHreGyIzxIT
        ICE7RomQb6k3VV1ZFssoEbL+kmOCZeGRpEhIJZaFR5IiIZVYFh5JioRUYll4JCkSUoll4ZGkSEglloVH
        kiIhlVgWHkmKhFRiWXgkKRJSiWXhkaRISCWWhUeSIiGVWBYeSYqEVGJZeCQpx0sIu05Tn1F/UL9QF6l7
        4uFR0P8U9TX1N/Uj9RZ1Rzw8CPrmI4Q9T1L/dBsPYyHeG8cGQd+r3YSjfEndFseaoWceQthxK/Vzt20x
        78XRZui5j/qr617My3G0GXpmI+RRX5XyUxxthp4XvDXl8zjaDD2zEfKEr8qJo83Q8pp3plyLo83QMxsh
        9vqxlDjaDC3nvDNFQjLYISE9NsRnpUhIQI+E9MTRZmiRkLGwQ0J6bIjPSpGQgB4J6YmjzdAiIWNhh4T0
        2BCflSIhAT0S0hNHm6FFQsbCDgnpsSE+K0VCAnokpCeONkOLhIyFHRLSY0N8VoqEBPTMRoi+H9JjQ3xW
        SoUQfcewx4b4rJQKIfqeeo8N8VkpGxdisMdeR/SuExvis1JKhBjs0vuybIjPSikTsutYFh5JioRUYll4
        JCkSUoll4ZGkSEglloVHkiIhlVgWHkmKhFRiWXgkKRJSCVlc8UhSJKQKcnjD41iKhFRABm97FCv5IFrG
        wxAJWQL33yrDeCXaxsMQCUng3ofI+JW6O1rHwxAJWQD3PUTG79Qj0boeDJKQ6+CeW17Ae0zGY9G6PgyT
        kANwv9uTYTBQQgLudbsyDIZKCHCf25dhMHj2QrjH3ZBhMHzWQri/3ZFhsGC2Qri33ZJhsGSWQriv3ZNh
        sGiVkE+pB9es+6mbY+Vg6D1xYNYU9Q7Visk4HZeyeVi2SshU/Ea9Tt0Sq1fC2cep76htUSvDYGGVkJ6L
        sXopnDtLLXqfVhX1MgyWVgsxTsb6hfC4ydjmj2HajgyDxdsQ8lKsPwKPzVeGwfJ3u8uo5VysPwQfn7cM
        gwuwt1pWc0QIH5MMg4u4ifrCrqiQQ0L4s2QchIu5k7I3Nv9JVfC/EH6/bRn2TviH4nJ2Cy7sduoBatEX
        U0PqB2oZnRB+HSLDzr1ILdo3pk5Sd3U3ftzhRu3n6S7D/v3fs1Tr1xkm4/kYL4ZCeKuEfEMNeWacjdFi
        DAS4SkgremZMASFOIUQypoIg1xUiGVNCmOsIkYypIdCxQiRjExDqGCGSsSkIdqgQk6G/2m4Kwh0iRM+M
        TUPArUIkowJCvtrFvRx9mqqCoD/uIs+RjEoI++ku9sVIRjUEfiP1oaV/HfbfJT0Xx0QlBH8D9Qz1CfUV
        9T71cDwshBBCiEHs7f0HvcpmUIfTRCIAAAAASUVORK5CYII=
</value>
  </data>
</root>